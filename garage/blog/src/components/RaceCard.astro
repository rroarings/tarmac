---
import { getCollection, type CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

interface Props {
  race: CollectionEntry<"races">;
  completedRaces?: CollectionEntry<"races">[];
}

const { race, completedRaces = [] } = Astro.props;

// Extract the filename without extension as the slug
const parts = race.id.split("/");
const raceSlug = parts[parts.length - 1].replace(/\.(md|mdx)$/, "");

// Helper for UTC midnight to ensure consistent timezone handling
const toUTCMidnight = (date: Date) => {
  const d = new Date(date);
  d.setUTCHours(0, 0, 0, 0);
  return d;
};

// Use UTC dates for consistent comparisons
const nowUTC = toUTCMidnight(new Date());
const raceDateUTC = toUTCMidnight(new Date(race.data.date));
const fourDaysFromNowUTC = new Date(nowUTC);
fourDaysFromNowUTC.setDate(nowUTC.getDate() + 4);

// Race status checks
const isPastRace = raceDateUTC.getTime() < nowUTC.getTime();
const isCurrentRace = !race.data.completed && !isPastRace && raceDateUTC.getTime() <= fourDaysFromNowUTC.getTime();
const lastRaceDate = completedRaces.length > 0 
  ? Math.max(...completedRaces.map(r => toUTCMidnight(new Date(r.data.date)).getTime()))
  : 0;
const isLastRace = race.data.completed && raceDateUTC.getTime() === lastRaceDate;
---

<a href={`/seasons/${race.data.season}/races/${raceSlug}`} class="block h-full">
  <div
    class:list={[
      "h-full border rounded-lg overflow-hidden shadow-sm transition-shadow duration-200 hover:shadow-md",
      {
        "border-red-200 bg-red-50": isCurrentRace,
        "border-blue-200 bg-blue-50": isLastRace,
        "border-green-100 bg-green-50": race.data.completed && !isLastRace,
        "border-gray-200 bg-white": !isCurrentRace && !isLastRace && !race.data.completed,
      },
    ]}
  >
    {race.data.trackImage && (
      <img
        src={race.data.trackImage}
        alt={`${race.data.trackName} circuit`}
        class="w-full h-48 object-cover"
      />
    )}
    <div class="p-4">
      <div class="flex items-center justify-between mb-4">
        {
          isCurrentRace && (
            <span class="px-3 py-1 bg-red-500 text-white text-xs rounded-full">
              Next Race
            </span>
          )
        }
        {
          isLastRace && (
            <span class="px-3 py-1 bg-blue-500 text-white text-xs rounded-full">
              Last Race
            </span>
          )
        }
        {
          race.data.completed && !isLastRace && (
            <span class="px-3 py-1 bg-green-600 text-white text-xs rounded-full">
              Completed
            </span>
          )
        }
        {
          !race.data.completed && isPastRace && (
            <span class="px-3 py-1 bg-yellow-500 text-white text-xs rounded-full">
              Previous
            </span>
          )
        }
        {
          !race.data.completed && !isCurrentRace && !isPastRace && (
            <span class="px-3 py-1 bg-gray-500 text-white text-xs rounded-full">
              Upcoming
            </span>
          )
        }
      </div>
    </div>
    <div class="p-6">
      <p class="text-sm text-gray-500 mb-1">Race #{race.data.raceNumber}</p>

      <h3 class="text-xl font-bold mb-2">{race.data.trackName}</h3>
      <p class="text-gray-600 mb-3">{race.data.location}</p>

      <div class="text-sm text-gray-600">
        <div class="flex justify-between items-center mb-1">
          <span>Date:</span>
          <span><FormattedDate date={race.data.date} /></span>
        </div>

        {
          race.data.completed && (
            <>
              <div class="flex justify-between items-center mb-1">
                <span>Winner:</span>
                <span>{race.data.winner}</span>
              </div>
              <div class="flex justify-between items-center">
                <span>Fastest Lap:</span>
                <span>{race.data.fastestLapTime}</span>
              </div>
            </>
          )
        }

        {
          !race.data.completed && (
            <div class="mt-4">
              <span class="px-2 py-1 rounded bg-gray-200 text-gray-700 text-xs">
                Upcoming
              </span>
            </div>
          )
        }
      </div>
    </div>
  </div>
</a>
